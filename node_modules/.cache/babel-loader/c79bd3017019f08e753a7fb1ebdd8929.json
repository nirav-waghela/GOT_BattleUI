{"ast":null,"code":"var _jsxFileName = \"/home/nirav/got_battle/battleui/got_battle/src/home.js\";\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport config from './constant';\nimport Suggestion from './suggestion';\nimport { AutoComplete } from 'antd';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: '',\n      suggestions: [],\n      showSuggestion: false,\n      data: {}\n    };\n\n    this.showDetails = id => {\n      axios.get(`${config.baseUrl}/details/?id=${id}`).then(res => {\n        if (res.data) {\n          this.setState({ ...this.state,\n            data: res.data\n          });\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.onSelect = data => {\n      console.log(data, 'in onselect');\n    };\n\n    this.onSearch = data => {\n      console.log(data, \"in onsearch\");\n    };\n\n    this.onChange = event => {\n      if (event.length > 2) {\n        this.setState({ ...this.state,\n          search: event\n        });\n      }\n\n      if (this.state.search.length > 1) {\n        axios.get(`${config.baseUrl}/search/?name=${this.state.search}`).then(res => {\n          console.log(res.data);\n          this.setState({ ...this.state,\n            suggestions: res.data,\n            showSuggestion: true\n          });\n        }).catch(err => console.log(err));\n      }\n    };\n\n    this.querySearch = event => {\n      if (event.length > 2) {\n        this.setState({ ...this.state,\n          search: event\n        });\n      }\n\n      if (this.state.search.length > 1) {\n        axios.get(`${config.baseUrl}/search/?name=${this.state.search}`).then(res => {\n          console.log(res.data);\n          this.setState({ ...this.state,\n            suggestions: res.data,\n            showSuggestion: true\n          });\n        }).catch(err => console.log(err));\n      }\n    };\n  }\n\n  render() {\n    console.log(this.state.suggestions, \"inrender\");\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AutoComplete // options={this.state.suggestions}\n    , {\n      style: {\n        width: 200\n      },\n      onSearch: this.onSearch,\n      onChange: this.onChange,\n      placeholder: \"control mode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/nirav/got_battle/battleui/got_battle/src/home.js"],"names":["React","Component","Fragment","axios","config","Suggestion","AutoComplete","Home","state","search","suggestions","showSuggestion","data","showDetails","id","get","baseUrl","then","res","setState","catch","err","console","log","onSelect","onSearch","onChange","event","length","querySearch","render","width"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport axios from 'axios'\nimport config from './constant'\nimport Suggestion from './suggestion'\nimport { AutoComplete } from 'antd';\n\n\n\nclass Home extends Component {\n    state = {\n        search: '',\n        suggestions: [],\n        showSuggestion: false,\n        data: {}\n    }\n\n    showDetails = (id) => {\n        axios.get(`${config.baseUrl}/details/?id=${id}`)\n            .then(res => {\n                if (res.data) {\n                    this.setState({\n                        ...this.state,\n                        data: res.data\n                    })\n                }\n            })\n            .catch(err => console.log(err))\n    }\n\n    onSelect = (data) => {\n        console.log(data , 'in onselect')\n    }\n\n    onSearch = (data) => {\n        console.log(data, \"in onsearch\")\n    }\n\n    onChange = (event) => {\n        if (event.length > 2) {\n            this.setState({\n                ...this.state,\n                search: event\n            })\n        }\n\n\n        if (this.state.search.length > 1) {\n            axios.get(`${config.baseUrl}/search/?name=${this.state.search}`)\n                .then(res => {\n                    console.log(res.data)\n                    this.setState({\n                        ...this.state,\n                        suggestions: res.data,\n                        showSuggestion: true\n                    })\n\n                })\n                .catch(err => console.log(err))\n        }\n    }\n\n    querySearch = (event) => {\n        if (event.length > 2) {\n            this.setState({\n                ...this.state,\n                search: event\n            })\n        }\n\n\n        if (this.state.search.length > 1) {\n            axios.get(`${config.baseUrl}/search/?name=${this.state.search}`)\n                .then(res => {\n                    console.log(res.data)\n                    this.setState({\n                        ...this.state,\n                        suggestions: res.data,\n                        showSuggestion: true\n                    })\n\n                })\n                .catch(err => console.log(err))\n        }\n    }\n    render() {\n        console.log(this.state.suggestions, \"inrender\")\n        return (\n            <Fragment>\n                <div>   \n                    <AutoComplete\n                        // options={this.state.suggestions}\n                        style={{\n                        width: 200,\n                        }}\n                        onSearch={this.onSearch}\n                        onChange={this.onChange}\n                        placeholder=\"control mode\"\n                    />\n\n\n                        {/* <input type='text'\n                            ref={(input) => this.input = input}\n                            onChange={(event) => this.querySearch(event)}\n                            name=\"battleSearch\"\n                            placeholder='Search Battles' /> */}\n                </div>\n                \n                    {/* {this.state.showSuggestion &&\n                        <Suggestion showDetails={this.showDetails} results={this.state.suggestions} />} */}\n                \n            </Fragment>\n        )\n    }\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}